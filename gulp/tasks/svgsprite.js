import gulp from "gulp";
import plumber from "gulp-plumber";
import notify from "gulp-notify";
import svgSprite from "gulp-svg-sprite";
import { path } from "../config/path.js";

// üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
const plumberNotify = (title) => ({
  errorHandler: (error) => {
    notify.onError({
      title,
      message: error?.message || "Unknown error",
    })(error);
  },
});

// üß± –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è stack-—Å–ø—Ä–∞–π—Ç–∞
const svgStackConfig = {
  mode: {
    stack: {
      sprite: "sprite.stack.svg",
      dest: ".",
      example: true, // HTML-–ø—Ä–µ–≤—å—é (–º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å)
    },
  },
  shape: {
    transform: [
      {
        svgo: {
          js2svg: { indent: 2, pretty: true },
        },
      },
    ],
  },
};

// üß± –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è symbol-—Å–ø—Ä–∞–π—Ç–∞
const svgSymbolConfig = {
  mode: {
    symbol: {
      sprite: "../sprite.symbol.svg",
    },
  },
  shape: {
    transform: [
      {
        svgo: {
          js2svg: { indent: 4, pretty: true },
          plugins: [
            {
              name: "removeAttrs",
              params: {
                attrs: "(fill|stroke)",
              },
            },
          ],
        },
      },
    ],
  },
};

import through2 from "through2";

const debugLog = () =>
  through2.obj(function (file, _, cb) {
    console.log("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∏–∫–æ–Ω–∫–∞:", file.relative);
    cb(null, file);
  });
// üì¶ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è stack-—Å–ø—Ä–∞–π—Ç–∞
export const svgStack = () => {
  return gulp
    .src(path.src.svgsprite)
    .pipe(plumber(plumberNotify("SVG Stack")))
    .pipe(debugLog())
    .pipe(svgSprite(svgStackConfig))

    .pipe(gulp.dest(path.build.svgsprite))

    .pipe(gulp.dest(path.build.svgsprite));
};

// üì¶ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è symbol-—Å–ø—Ä–∞–π—Ç–∞
export const svgSymbol = () => {
  return gulp
    .src(path.src.svgsprite, { allowEmpty: true })
    .on("data", (file) => {
      console.log("–§–∞–π–ª –≤ –ø–æ—Ç–æ–∫–µ:", file.path);
    })
    .pipe(plumber(plumberNotify("SVG Symbol")))
    .pipe(svgSprite(svgSymbolConfig))
    .on("end", () => {
      console.log("‚úÖ sprite.symbol.svg —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω");
    })
    .pipe(gulp.dest(path.build.svgsprite));
};

gulp
  .src("src/images/svgsprite/**/*.svg")
  .pipe(svgsprite(svgSymbolConfig))
  .pipe(gulp.dest("docs/images/svgsprite"));
