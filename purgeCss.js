import fs from "fs";
import purgecss from "purgecss";
import glob from "glob";

// –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
const contentPaths = ["build/**/*.html", "src/js/**/*.js"];
const cssPath = "./docs/css/style.min.css";

// –°–æ–±–∏—Ä–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Å–µ—Ö HTML + JS
const content = contentPaths
  .map((pattern) => glob.sync(pattern))
  .flat()
  .map((file) => ({
    raw: fs.readFileSync(file, "utf8"),
    extension: file.split(".").pop(),
  }));

// –ß–∏—Ç–∞–µ–º CSS
const css = fs.readFileSync(cssPath, "utf8");

// –ó–∞–ø—É—Å–∫–∞–µ–º PurgeCSS (—Ç–æ–ª—å–∫–æ –∞–Ω–∞–ª–∏–∑)
const purge = await purgecss.purgeCSS({
  content,
  css: [{ raw: css }],
  rejected: true,
  safelist: {
    standard: [
      /^rooms/,
      /^pulse/,
      /^scrollReveal/,
      /^animate-on-scroll/,
      "active",
      "open",
    ],
  },
});

// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
const unused = purge[0].rejected;

console.log("üîç –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã:");
unused.forEach((sel) => console.log("  ‚Ä¢", sel));

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª –æ—Ç—á—ë—Ç–∞
fs.writeFileSync(
  "unused-css-report.json",
  JSON.stringify({ rejected: unused }, null, 2)
);

console.log(`üìÑ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ unused-css-report.json`);
